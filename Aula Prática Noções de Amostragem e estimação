# Aula Prática Noções de Amostragem e estimação

# Import de bibliotecas

import random
from random import sample
import numpy as np

# Amostragem aleatória simples
## (AAS) Amostragem Aleatória Sem Reposição De tamanho 5

vetor_populacao_que_sera_amostrado = [1,2,3,4,5,6,7,8,9,10]
sample(vetor_populacao_que_sera_amostrado,k=5) # sem reposição

# (AAS) Amostragem Aleatória Com Reposição De tamanho 7

vetor_populacao_que_sera_amostrado = [1,2,3,4,5,6,7,8,9,10]
random.choices(vetor_populacao_que_sera_amostrado,k = 7) # com reposição

# Amostragem Sistemática

## Queremos escolher uma amostra de 1000 fichas, dentre uma população de 5000 fichas

n = 1000
N = 5000

# Calculando o valor de K

k= N / n
k
#type(int(k))


# Sortearemos um valor entre 1 e k que chammos de partida aleatória e denotamos de r.

## Criando a sequência de 1 a k

seq = [n for n in range(1,int(k+1))]
seq

## Segunda alternativa para criar a seq

r_teste = np.arange(1,6,1)
r_teste

# Sorteio entre 1 e k

r = sample(seq,1)
r[0]

# Outra alternativa

r_principal = random.randint(1,(k))
r_principal

#integers = r
#strings = [str(integer) for integer in integers]
#a_string = "". join(strings)
#an_integer = int(a_string)
#print(an_integer)

# Sorteado:

from google.colab import files
from io import BytesIO
from PIL import Image

uploaded = files.upload()
im = Image.open(BytesIO(uploaded["seq.png"]))
im

#seq(from=r,to=N,by=k)
np.set_printoptions(suppress=True)
seq = np.arange(r[0], N, k)
seq

r[0]+(n-1)*k

# Amostragem estratificada

# Tamanho que deve ter a amostra:

n = 80

# Tamanhos da população dos estratos

#Tamanho da população no estrato 1
N1 = 500
#Tamanho da população no estrato 2
N2 = 1200
#Tamanho da população no estrato 3
N3 = 200
#Tamanho da população no estrato 4
N4 = 100

# Tamanho total da população

N = N1 + N2 + N3 + N4
N

# Fração amostral

f = n / N
f

# Calculando os n´s para cada extrato com alocação proporcional ao tamanho do estrato

n1 = f*N1
n2 = f*N2
n3 = f*N3
n4 = f*N4

# Juntando os tamanhos das amostras dos estratos

print(n1, n2, n3, n4)
